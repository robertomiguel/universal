<?php

/**
 * cuotaTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class cuotaTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object cuotaTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('cuota');
    }
//---------- Valor nominal
    public static function getVnominal($id){
      $vnominal = Doctrine_Query::create()
       ->select("SUM(importe) as total")
       ->from("cuota")
       ->where('suscripcion_id=?', $id)->execute();
    return $vnominal[0]['total'];
    }
//---------- cantidad de cuotas de una suscripción
public static function getTotalcuotas($id){

 $totalcuotas = Doctrine_Query::create()
       ->select("COUNT(id) as totalcuotas")
       ->from("cuota")
       ->where('suscripcion_id=?', $id)->execute();

 return $totalcuotas[0]['totalcuotas'];
}

//----------- ver cuotas
public static function verCuotas($id){

$respuesta = Doctrine_Query::create()
         ->select('nro_cuota,suscripcion_id,importe,femision,fvencimiento,fpago')
         ->from("cuota")
         ->where('suscripcion_id=?', $id )
         ->orderBy('nro_cuota')
         ->execute();
 return $respuesta;
}

//=================== ver Morosos  ===============================0
public function verMorosos(){

$respuesta = Doctrine_Query::create()
   ->select("concat(n.tel,' / ',n.celular) as telefono,
    concat(x.apellido,' ',x.nombre) as productor,s.plan as plan,
    s.suscriptor_id as suscriptor_id,s.id as suscripcion_id,
    concat(n.apellido,' ',n.nombre) as nombre,s.nro as nro,nro_cuota,
    suscripcion_id,importe,fvencimiento")
   ->from('cuota c')
   ->leftJoin('c.suscripcion s')
   ->leftJoin('s.suscriptor n')
   ->leftJoin('s.productor x')
   ->Where('c.fvencimiento <?' , date('Y-m-31')) //menor a la fecha actual
   ->andWhere('c.fpago is null') //sin pagar
   ->andWhere('s.fecha_baja is null') // activo
   ->andWhere("n.activo = 1")
   ->orderBy('suscriptor_id')
   ->addOrderBy('fvencimiento')
   ->execute();
return $respuesta;
  }
public function verMorososfecha($mes,$anio){

$respuesta = Doctrine_Query::create()
   ->select("concat(n.tel,' / ',n.celular) as telefono,
    concat(x.apellido,' ',x.nombre) as productor,s.plan as plan,
    s.suscriptor_id as suscriptor_id,s.id as suscripcion_id,
    concat(n.apellido,' ',n.nombre) as nombre,s.nro as nro,
    nro_cuota,suscripcion_id,importe,fvencimiento")
   ->from('cuota c')
   ->leftJoin('c.suscripcion s')
   ->leftJoin('s.suscriptor n')
   ->leftJoin('s.productor x')
   ->Where('c.fvencimiento >=?' , "$anio-$mes-1")
   ->andWhere('c.fvencimiento <=?' , "$anio-$mes-31")
   ->andWhere('c.fpago is null') //sin pagar
   ->andWhere('s.fecha_baja is null') // activo
   ->andWhere('c.fvencimiento <?' , date('Y-m-d')) //menor a la fecha actual
   ->andWhere("n.activo = 1")
   ->orderBy('suscriptor_id')
   ->addOrderBy('fvencimiento')
   ->execute();
return $respuesta;
  }

//------------ contar pagadas
public static function getPagadas($id){

 $pagadas = Doctrine_Query::create()
       ->select("COUNT(id) as totalcuotas")
       ->from("cuota")
       ->where('suscripcion_id=?', $id)
       ->andWhere('not fpago is null')
       ->execute();
 return $pagadas[0]['totalcuotas'];
}

//------------ contar vencidas
public static function getVencidas($id){

 $pagadas = Doctrine_Query::create()
       ->select("COUNT(id) as totalcuotas")
       ->from("cuota")
       ->where('suscripcion_id=?', $id)
       ->andWhere('fpago is null')
       ->andWhere('fvencimiento <?',date('Y-m-d'))
       ->execute();
 return $pagadas[0]['totalcuotas'];
}
//------------ ver las impagas de un solo plan
public static function verImpagas($id){

 $respuesta = Doctrine_Query::create()
       ->select("nro_cuota,suscripcion_id,importe,femision,fvencimiento,fpago")
       ->from("cuota")
       ->where('suscripcion_id=?', $id)
       ->andWhere('fpago is null')
->execute();
 return $respuesta;
}
//------------ ver las vencidas de un solo plan
public static function verVencidas($id){

 $respuesta = Doctrine_Query::create()
       ->select("nro_cuota,suscripcion_id,importe,femision,fvencimiento,fpago")
       ->from("cuota")
       ->where('suscripcion_id=?', $id)
       ->andWhere('fpago is null')
       ->andWhere('fvencimiento <?',date('Y-m-d'))
       ->execute();
 return $respuesta;
}

//------------ ver las pagadas de un solo plan
public static function verPagadas($id){

 $respuesta = Doctrine_Query::create()
       ->select("nro_cuota,suscripcion_id,importe,femision,fvencimiento,fpago")
       ->from("cuota")
       ->where('suscripcion_id=?', $id)
        ->andWhere('not fpago is null')
       ->execute();
 return $respuesta;
}

//=============== CONSULTAS ver Cuotas del Período seleccionado ===============
public function verPeriodoSinpagar($mes,$anio){
$respuesta = Doctrine_Query::create()
   ->select("concat(n.tel,' / ',n.celular) as telefono,
    concat(x.apellido,' ',x.nombre) as productor, s.plan as plan,
    s.suscriptor_id as suscriptor_id,s.id as suscripcion_id,
    concat(n.apellido,' ',n.nombre) as nombre,s.nro as nro,
    nro_cuota,suscripcion_id,importe, n.localidad.nombre as localidad,
    n.domicilio as direccion, s.diacobro as diacobro")
   ->from('cuota c')
   ->leftJoin('c.suscripcion s')
   ->leftJoin('s.suscriptor n')
   ->leftJoin('s.productor x')
   ->Where('c.fvencimiento >=?' , "$anio-$mes-1")
   ->andWhere('s.fecha_baja is null') // activo
   ->andWhere('c.fvencimiento <=?' , "$anio-$mes-31")
   ->andWhere("c.fpago is null")
   ->andWhere("n.activo = 1")
   ->orderBy('suscriptor_id')
   ->addOrderBy('fvencimiento')
   ->execute();
return $respuesta;

  }
public function verPeriodoPagadas($mes,$anio){

$respuesta = Doctrine_Query::create()
   ->select("concat(n.tel,' / ',n.celular) as telefono,
    concat(x.apellido,' ',x.nombre) as productor, s.plan as plan,
    s.suscriptor_id as suscriptor_id,s.id as suscripcion_id,
    concat(n.apellido,' ',n.nombre) as nombre,s.nro as nro,
    nro_cuota,suscripcion_id,importe, n.localidad.nombre as localidad,
    n.domicilio as direccion, s.diacobro as diacobro")
   ->from('cuota c')
   ->leftJoin('c.suscripcion s')
   ->leftJoin('s.suscriptor n')
   ->leftJoin('s.productor x')
   ->Where('c.fvencimiento >=?' , "$anio-$mes-1")
   ->andWhere('s.fecha_baja is null') // activo
   ->andWhere('c.fvencimiento <=?' , "$anio-$mes-31")
   ->andWhere("not c.fpago is null")
   ->andWhere("n.activo = 1")
   ->orderBy('suscriptor_id')
   ->addOrderBy('fvencimiento')
   ->execute();
return $respuesta;
  }

public function verPeriodoCompleto($mes,$anio){

$respuesta = Doctrine_Query::create()
   ->select("concat(n.tel,' / ',n.celular) as telefono,
    concat(x.apellido,' ',x.nombre) as productor, s.plan as plan,
    s.suscriptor_id as suscriptor_id,s.id as suscripcion_id,
    concat(n.apellido,' ',n.nombre) as nombre,s.nro as nro,
    nro_cuota,suscripcion_id,importe, n.localidad.nombre as localidad,
    n.domicilio as direccion, s.diacobro as diacobro")
   ->from('cuota c')
   ->leftJoin('c.suscripcion s')
   ->leftJoin('s.suscriptor n')
   ->leftJoin('s.productor x')
   ->Where('c.fvencimiento >=?' , "$anio-$mes-1")
   ->andWhere('s.fecha_baja is null') // activo
   ->andWhere('c.fvencimiento <=?' , "$anio-$mes-31")
   ->andWhere('n.activo = 1')
   ->orderBy('n.localidad.nombre')
   ->addOrderBy('suscriptor_id')
   ->execute();
return $respuesta;
  }

//------------------ Liquidaciones x mes
public function verLiquidacion($mes,$anio){

$respuesta = Doctrine_Query::create()
   ->select("s.plan as plan,s.suscriptor_id as suscriptor_id,s.id as suscripcion_id,
    concat(n.apellido,' ',n.nombre) as nombre,s.nro as nro,
    nro_cuota,suscripcion_id,importe,fvencimiento")
   ->from('cuota c')
   ->leftJoin('c.suscripcion s')
   ->leftJoin('s.suscriptor n')
   ->Where('c.fvencimiento >=?' , "$anio-$mes-1")
   ->andWhere('s.fecha_baja is null') // activo
   ->andWhere('c.fvencimiento <=?' , "$anio-$mes-31")
   ->andWhere("c.fpago is null")
   ->andWhere("n.activo = 1")
//   ->andWhere("c.impresa = 0")
   ->orderBy('nombre')
//   ->orderBy('c.impresa')
//   ->addOrderBy('nombre')
//   ->addOrderBy('c.impresa')
   ->execute();
return $respuesta;
  }
//------------------ IMPRIMIR Liquidaciones x mes
public function imprimirLiquidacion($mes,$anio){

$respuesta = Doctrine_Query::create()
   ->select("c.impresa as impresa,s.codigo as scodigo,s.plan as plan,
    s.suscriptor_id as suscriptor_id,s.id as suscripcion_id,concat(n.apellido,' ',
      n.nombre) as nombre,s.nro as nro,nro_cuota,suscripcion_id,importe,fvencimiento")
   ->from('cuota c')
   ->leftJoin('c.suscripcion s')
   ->leftJoin('s.suscriptor n')
   ->Where('c.fvencimiento >=?' , "$anio-$mes-1")
   ->andWhere('s.fecha_baja is null') // activo
   ->andWhere('c.fvencimiento <=?' , "$anio-$mes-31")
   ->andWhere("c.fpago is null")
   ->andWhere("n.activo = 1")
   ->andWhere("c.impresa = 0")
   ->orderBy('nombre')
//   ->addOrderBy('nro_cuota')
   ->execute();
return $respuesta;
  }

//------------------ Todos los sobres de un periodo
public function verSobres($mes,$anio){
$respuesta = Doctrine_Query::create()
//   ->select("p.codigo as plan,n.codigo as codigo,s.suscriptor_id as suscriptor_id,s.id as suscripcion_id,concat(n.apellido,' ',n.nombre) as nombre,s.nro as nro,nro_cuota,suscripcion_id,importe,fvencimiento")
//   ->select("c.id,s.id,CONCAT(n.apellido,' ',n.nombre) as nombre, n.domicilio as domicilio,CONCAT(l.cp,' ',l.nombre) as localidad, e.nombre as provincia")
   ->select("c.id,concat(n.apellido,' ',n.nombre) as nombre, (n.domicilio) as domicilio,
concat('(',l.cp,') ',l.nombre) as localidad,(e.nombre) as provincia")
   ->from('cuota c')
   ->leftJoin('c.suscripcion s')
   ->leftJoin('s.suscriptor n')
   ->leftJoin('n.localidad l')
   ->leftJoin('l.provincia e')
   ->Where('c.fvencimiento >=?' , "$anio-$mes-1")
   ->andWhere('s.fecha_baja is null') // activo
   ->andWhere('c.fvencimiento <=?' , "$anio-$mes-31")
   ->andWhere("c.fpago is null")
   ->andWhere("n.activo = 1")
   ->andWhere("c.impresa = 0")
   ->orderBy('nombre')
//   ->addOrderBy('nro_cuota')
   ->execute();
return $respuesta;
  }

}
