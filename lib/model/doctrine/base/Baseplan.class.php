<?php

/**
 * Baseplan
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $rubro_id
 * @property integer $visto
 * @property string $descripcion
 * @property decimal $valor_cuota
 * @property string $foto
 * @property string $info_url
 * @property boolean $mostrar
 * @property rubro $rubro
 * 
 * @method integer getRubroId()     Returns the current record's "rubro_id" value
 * @method integer getVisto()       Returns the current record's "visto" value
 * @method string  getDescripcion() Returns the current record's "descripcion" value
 * @method decimal getValorCuota()  Returns the current record's "valor_cuota" value
 * @method string  getFoto()        Returns the current record's "foto" value
 * @method string  getInfoUrl()     Returns the current record's "info_url" value
 * @method boolean getMostrar()     Returns the current record's "mostrar" value
 * @method rubro   getRubro()       Returns the current record's "rubro" value
 * @method plan    setRubroId()     Sets the current record's "rubro_id" value
 * @method plan    setVisto()       Sets the current record's "visto" value
 * @method plan    setDescripcion() Sets the current record's "descripcion" value
 * @method plan    setValorCuota()  Sets the current record's "valor_cuota" value
 * @method plan    setFoto()        Sets the current record's "foto" value
 * @method plan    setInfoUrl()     Sets the current record's "info_url" value
 * @method plan    setMostrar()     Sets the current record's "mostrar" value
 * @method plan    setRubro()       Sets the current record's "rubro" value
 * 
 * @package    universal
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseplan extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('plan');
        $this->hasColumn('rubro_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('visto', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('descripcion', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('valor_cuota', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 2,
             'default' => 0,
             'length' => 10,
             ));
        $this->hasColumn('foto', 'string', 250, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 250,
             ));
        $this->hasColumn('info_url', 'string', 250, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 250,
             ));
        $this->hasColumn('mostrar', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('rubro', array(
             'local' => 'rubro_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}