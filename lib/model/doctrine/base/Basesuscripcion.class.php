<?php

/**
 * Basesuscripcion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property date $fecha_alta
 * @property date $fecha_vence
 * @property date $fecha_baja
 * @property integer $nro
 * @property integer $suscriptor_id
 * @property integer $productor_id
 * @property string $codigo
 * @property string $diacobro
 * @property string $plan
 * @property decimal $valor_cuota
 * @property integer $cant_cuotas
 * @property string $sorteo
 * @property string $obs
 * @property integer $usuario_id
 * @property suscriptor $suscriptor
 * @property productor $productor
 * @property Doctrine_Collection $suscripAlias
 * 
 * @method date                getFechaAlta()     Returns the current record's "fecha_alta" value
 * @method date                getFechaVence()    Returns the current record's "fecha_vence" value
 * @method date                getFechaBaja()     Returns the current record's "fecha_baja" value
 * @method integer             getNro()           Returns the current record's "nro" value
 * @method integer             getSuscriptorId()  Returns the current record's "suscriptor_id" value
 * @method integer             getProductorId()   Returns the current record's "productor_id" value
 * @method string              getCodigo()        Returns the current record's "codigo" value
 * @method string              getDiacobro()      Returns the current record's "diacobro" value
 * @method string              getPlan()          Returns the current record's "plan" value
 * @method decimal             getValorCuota()    Returns the current record's "valor_cuota" value
 * @method integer             getCantCuotas()    Returns the current record's "cant_cuotas" value
 * @method string              getSorteo()        Returns the current record's "sorteo" value
 * @method string              getObs()           Returns the current record's "obs" value
 * @method integer             getUsuarioId()     Returns the current record's "usuario_id" value
 * @method suscriptor          getSuscriptor()    Returns the current record's "suscriptor" value
 * @method productor           getProductor()     Returns the current record's "productor" value
 * @method Doctrine_Collection getSuscripAlias()  Returns the current record's "suscripAlias" collection
 * @method suscripcion         setFechaAlta()     Sets the current record's "fecha_alta" value
 * @method suscripcion         setFechaVence()    Sets the current record's "fecha_vence" value
 * @method suscripcion         setFechaBaja()     Sets the current record's "fecha_baja" value
 * @method suscripcion         setNro()           Sets the current record's "nro" value
 * @method suscripcion         setSuscriptorId()  Sets the current record's "suscriptor_id" value
 * @method suscripcion         setProductorId()   Sets the current record's "productor_id" value
 * @method suscripcion         setCodigo()        Sets the current record's "codigo" value
 * @method suscripcion         setDiacobro()      Sets the current record's "diacobro" value
 * @method suscripcion         setPlan()          Sets the current record's "plan" value
 * @method suscripcion         setValorCuota()    Sets the current record's "valor_cuota" value
 * @method suscripcion         setCantCuotas()    Sets the current record's "cant_cuotas" value
 * @method suscripcion         setSorteo()        Sets the current record's "sorteo" value
 * @method suscripcion         setObs()           Sets the current record's "obs" value
 * @method suscripcion         setUsuarioId()     Sets the current record's "usuario_id" value
 * @method suscripcion         setSuscriptor()    Sets the current record's "suscriptor" value
 * @method suscripcion         setProductor()     Sets the current record's "productor" value
 * @method suscripcion         setSuscripAlias()  Sets the current record's "suscripAlias" collection
 * 
 * @package    universal
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basesuscripcion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('suscripcion');
        $this->hasColumn('fecha_alta', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('fecha_vence', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('fecha_baja', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('nro', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'unique' => true,
             ));
        $this->hasColumn('suscriptor_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('productor_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('codigo', 'string', 5, array(
             'type' => 'string',
             'length' => 5,
             ));
        $this->hasColumn('diacobro', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('plan', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('valor_cuota', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 2,
             'default' => 0,
             'length' => 10,
             ));
        $this->hasColumn('cant_cuotas', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('sorteo', 'string', 3, array(
             'type' => 'string',
             'length' => 3,
             ));
        $this->hasColumn('obs', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('usuario_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('suscriptor', array(
             'local' => 'suscriptor_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('productor', array(
             'local' => 'productor_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('cuota as suscripAlias', array(
             'local' => 'id',
             'foreign' => 'suscripcion_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}